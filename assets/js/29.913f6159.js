(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{517:function(s,t,a){"use strict";a.r(t);var n=a(31),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"泛型-基础总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#泛型-基础总结"}},[s._v("#")]),s._v(" 泛型-基础总结")]),s._v(" "),a("h3",{attrs:{id:"概述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[s._v("#")]),s._v(" 概述")]),s._v(" "),a("ul",[a("li",[s._v("泛型就是类型参数化，处理的数据不是固定的，并且可以当作参数传入")]),s._v(" "),a("li",[s._v("泛型核心：告诉编译器想使用什么类型，然后编译器帮助你处理一切")])]),s._v(" "),a("p",[s._v("说明：")]),s._v(" "),a("ul",[a("li",[s._v("Java有java编译器和java虚拟机，编译器将java源代码编译成.class文件，虚拟机加载并运行.class文件")]),s._v(" "),a("li",[s._v("对于泛型类，"),a("strong",[s._v("Java编译器会将泛型类转换成普通的非泛型类，会将泛型类型在编译阶段擦除，虚拟机在运行的时候实际是不知道泛型这回事，泛型只存在于编译阶段")])])]),s._v(" "),a("p",[s._v("使用泛型的好处：")]),s._v(" "),a("ul",[a("li",[s._v("更好的安全性")]),s._v(" "),a("li",[s._v("更高的可读性")])]),s._v(" "),a("h3",{attrs:{id:"泛型方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#泛型方法"}},[s._v("#")]),s._v(" 泛型方法")]),s._v(" "),a("ul",[a("li",[s._v("要定义泛型方法，只需要将"),a("strong",[s._v("泛型参数列表")]),s._v("置于返回值前；")]),s._v(" "),a("li",[s._v("注意: "),a("strong",[s._v("一个方法是不是泛型的, 和它所在的类是不是泛型没有任何关系")]),s._v("；")]),s._v(" "),a("li",[s._v("泛型方法调用的时候，不需要指定类型参数的实际类型，Java编译器会推断出来；")])]),s._v(" "),a("p",[s._v("关键字：\n1.extends: "),a("strong",[s._v("为参数类型设置上界,给定的类型或者其子类型,可以是类也可以是接口以及其他参数类型")]),s._v("\n2.通配符"),a("code",[s._v("?")]),s._v("\n3.super:"),a("strong",[s._v("与extends正好相反")]),s._v("规定了一个下界")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("<T extends E>")]),s._v("用于"),a("strong",[s._v("定义类型参数")]),s._v("，它声明了一个类型参数"),a("code",[s._v("T")]),s._v("，可放在泛型类中类名的后面、泛型方法返回值前面；")]),s._v(" "),a("li",[a("code",[s._v("<? extends E>")]),s._v("用于实例化类型参数，它用于实例化泛型变量中的类型参数，只是这个具体类型是未知的，只知道它是"),a("code",[s._v("E")]),s._v("或"),a("code",[s._v("E")]),s._v("的子类型；\n它们虽然不一样，但是经常可以达成同样的目标。")])]),s._v(" "),a("h3",{attrs:{id:"通配符extends、super比较"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#通配符extends、super比较"}},[s._v("#")]),s._v(" 通配符"),a("code",[s._v("extends")]),s._v("、"),a("code",[s._v("super")]),s._v("比较")]),s._v(" "),a("p",[s._v("通配符比较:")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("共同点: 目的都是为了使方法接口更为灵活，可以接受更为广泛的类型。")])]),s._v(" "),a("li",[a("p",[a("code",[s._v("<? super E>")]),s._v("用于灵活"),a("strong",[s._v("写入或比较")]),s._v("，使得对象可以"),a("strong",[s._v("写入父类型的容器")]),s._v("("),a("code",[s._v(">=")]),s._v(")，使得父类型的比较方法可以应用于子类对象。")])]),s._v(" "),a("li",[a("p",[a("code",[s._v("<? extends E>")]),a("strong",[s._v("用于灵活读取")]),s._v("，使得方法可以读取"),a("code",[s._v("E")]),s._v("或"),a("code",[s._v("E")]),s._v("的任意子类型的容器对象。")])])]),s._v(" "),a("p",[s._v("Java容器类的实现中，有很多这种用法，比如，"),a("code",[s._v("Collections")]),s._v("中就有如下一些方法：")]),s._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("T")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extends")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Comparable")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("super")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("T")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sort")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("List")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("T")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" list"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("T")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sort")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("List")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("T")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" list"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Comparator")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("super")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("T")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("T")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("copy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("List")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("super")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("T")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" dest"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("List")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extends")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("T")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" src"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("T")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("T")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("max")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Collection")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extends")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("T")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" coll"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Comparator")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("super")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("T")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" comp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n")])])]),a("h3",{attrs:{id:"泛型注意事项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#泛型注意事项"}},[s._v("#")]),s._v(" 泛型注意事项")]),s._v(" "),a("ul",[a("li",[s._v("1.基本类型不能用于实例化类型参数，也就是泛型类或者泛型方法中，不接受 8 种基本数据类型。")]),s._v(" "),a("li",[s._v("2.运行时类型信息不适用于泛型")]),s._v(" "),a("li",[s._v("3."),a("code",[s._v("Java")]),s._v(" 不能创建具体类型的泛型数组")]),s._v(" "),a("li",[s._v("4.不能通过类型参数创建对象")]),s._v(" "),a("li",[s._v("5.泛型类类型参数不能用于静态变量和方法，泛型类中泛型只能用在成员变量上，只能使用引用类型，在接口中泛型只能只能用在抽象方法中，全局常量不能使用泛型")]),s._v(" "),a("li",[s._v("6.子类继承父类泛型")])])])}),[],!1,null,null,null);t.default=e.exports}}]);